#!/bin/bash
##
## This source file is part of the valkey-swift project
## Copyright (c) 2025 the valkey-swift project authors
##
## See LICENSE.txt for license information
## SPDX-License-Identifier: Apache-2.0
##

set -eu

here="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

function genWithoutContextParameter() {
    how_many=$1

    echo ""

    echo "    @inlinable"
    echo -n "    public mutating func encodeArray<T0: RESPRenderable"
    for ((n = 1; n<how_many; n +=1)); do
        echo -n ", T$((n)): RESPRenderable"
    done

    echo -n ">(_ t0: T0"
    for ((n = 1; n<how_many; n +=1)); do
        echo -n ", _ t$((n)): T$((n))"
    done
    echo ") {"

    echo "        self.encodeIdentifier(.array)"
    echo -n "        let count = t0.respEntries"
    for ((n = 1; n<how_many; n +=1)); do
        echo -n " + t$((n)).respEntries"
    done
    echo
    echo "        self.buffer.writeString(\"\\(count)\")"
    # shellcheck disable=SC2028
    echo "        self.buffer.writeStaticString(\"\\r\\n\")"
    for ((n = 0; n<how_many; n +=1)); do
        echo "        t$((n)).encode(into: &self)"
    done
    echo "    }"
}

grep -q "ByteBuffer" "${BASH_SOURCE[0]}" || {
    echo >&2 "ERROR: ${BASH_SOURCE[0]}: file or directory not found (this should be this script)"
    exit 1
}

{
cat <<"EOF"
//
// This source file is part of the valkey-swift project
// Copyright (c) 2025 the valkey-swift project authors
//
// See LICENSE.txt for license information
// SPDX-License-Identifier: Apache-2.0
//
/// NOTE: THIS FILE IS AUTO-GENERATED BY dev/generate-multi-command-encoder.sh
EOF
echo

echo "import NIOCore"
echo ""
echo "extension ValkeyCommandEncoder {"

# note:
# - widening the interval below (eg. going from {1..15} to {1..25}) is Semver minor
# - narrowing the interval below is SemVer _MAJOR_!
for n in {1..29}; do
    genWithoutContextParameter "$n"
done
echo "}"
} > "$here/../Sources/Valkey/ValkeyCommandEncoder-multi-encode.swift"

swift format format -i "$here/../Sources/Valkey/ValkeyCommandEncoder-multi-encode.swift"
