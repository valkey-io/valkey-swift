#!/bin/bash

set -eu

here="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

function genWithoutContextParameter() {
    how_many=$1

    echo ""

    echo "    @inlinable"
    echo -n "    public mutating func encodeArray<T0: RESPRenderable"
    for ((n = 1; n<$how_many; n +=1)); do
        echo -n ", T$(($n)): RESPRenderable"
    done

    echo -n ">(_ t0: T0"
    for ((n = 1; n<$how_many; n +=1)); do
        echo -n ", _ t$(($n)): T$(($n))"
    done
    echo ") {"

    echo "        self.encodeIdentifier(.array)"
    echo "        var count = 0"
    echo "        let arrayCountIndex = buffer.writerIndex"
    echo "        self.buffer.writeStaticString(\"0\\r\\n\")"
    for ((n = 0; n<$how_many; n +=1)); do
        echo "        count += t$(($n)).encode(into: &self)"
    done
    echo "        if count > 9 {"
    echo "            // I'm being lazy here and not supporting more than 99 arguments"
    echo "            precondition(count < 100)"
    echo "            // We need to rebuild ByteBuffer with space for double digit count"
    echo "            // skip past count + \r\n"
    echo "            let sliceStart = arrayCountIndex + 3"
    echo "            var slice = buffer.getSlice(at: sliceStart, length: buffer.writerIndex - sliceStart)!"
    echo "            self.buffer.moveWriterIndex(to: arrayCountIndex)"
    echo "            self.buffer.writeString(String(count))"
    echo "            self.buffer.writeStaticString(\"\\r\\n\")"
    echo "            self.buffer.writeBuffer(&slice)"
    echo "        } else {"
    echo "            self.buffer.setString(String(count), at: arrayCountIndex)"
    echo "        }"
    echo "    }"
}

grep -q "ByteBuffer" "${BASH_SOURCE[0]}" || {
    echo >&2 "ERROR: ${BASH_SOURCE[0]}: file or directory not found (this should be this script)"
    exit 1
}

{
cat <<"EOF"
/// NOTE: THIS FILE IS AUTO-GENERATED BY dev/generate-multi-command-encoder.sh
EOF
echo

echo "import NIOCore"
echo ""
echo "extension RESPCommandEncoder {"

# note:
# - widening the inverval below (eg. going from {1..15} to {1..25}) is Semver minor
# - narrowing the interval below is SemVer _MAJOR_!
for n in {1..15}; do
    genWithoutContextParameter "$n"
done
echo "}"
} > "$here/../Sources/Valkey/RESP/RESPCommandEncoder-multi-encode.swift"
